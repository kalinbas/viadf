#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace viadflib
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_35815_viadf")]
	public partial class DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertColonia(Colonia instance);
    partial void UpdateColonia(Colonia instance);
    partial void DeleteColonia(Colonia instance);
    partial void InsertType(Type instance);
    partial void UpdateType(Type instance);
    partial void DeleteType(Type instance);
    partial void InsertDelegacion(Delegacion instance);
    partial void UpdateDelegacion(Delegacion instance);
    partial void DeleteDelegacion(Delegacion instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertMail(Mail instance);
    partial void UpdateMail(Mail instance);
    partial void DeleteMail(Mail instance);
    partial void InsertPOI(POI instance);
    partial void UpdatePOI(POI instance);
    partial void DeletePOI(POI instance);
    partial void InsertRoute(Route instance);
    partial void UpdateRoute(Route instance);
    partial void DeleteRoute(Route instance);
    partial void InsertRoutePiece(RoutePiece instance);
    partial void UpdateRoutePiece(RoutePiece instance);
    partial void DeleteRoutePiece(RoutePiece instance);
    partial void InsertSearchHistory(SearchHistory instance);
    partial void UpdateSearchHistory(SearchHistory instance);
    partial void DeleteSearchHistory(SearchHistory instance);
    partial void InsertSearchIndex(SearchIndex instance);
    partial void UpdateSearchIndex(SearchIndex instance);
    partial void DeleteSearchIndex(SearchIndex instance);
    partial void InsertStreet(Street instance);
    partial void UpdateStreet(Street instance);
    partial void DeleteStreet(Street instance);
    partial void InsertStreetCrossing(StreetCrossing instance);
    partial void UpdateStreetCrossing(StreetCrossing instance);
    partial void DeleteStreetCrossing(StreetCrossing instance);
    partial void InsertSystemException(SystemException instance);
    partial void UpdateSystemException(SystemException instance);
    partial void DeleteSystemException(SystemException instance);
    partial void InsertServiceAPI(ServiceAPI instance);
    partial void UpdateServiceAPI(ServiceAPI instance);
    partial void DeleteServiceAPI(ServiceAPI instance);
    partial void InsertServiceClient(ServiceClient instance);
    partial void UpdateServiceClient(ServiceClient instance);
    partial void DeleteServiceClient(ServiceClient instance);
    partial void InsertServiceCall(ServiceCall instance);
    partial void UpdateServiceCall(ServiceCall instance);
    partial void DeleteServiceCall(ServiceCall instance);
    partial void InsertBusiness(Business instance);
    partial void UpdateBusiness(Business instance);
    partial void DeleteBusiness(Business instance);
    #endregion
		
		public DataContext() : 
				base(global::viadflib.Properties.Settings.Default.DB_35815_viadfConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Colonia> Colonias
		{
			get
			{
				return this.GetTable<Colonia>();
			}
		}
		
		public System.Data.Linq.Table<Type> Types
		{
			get
			{
				return this.GetTable<Type>();
			}
		}
		
		public System.Data.Linq.Table<Delegacion> Delegacions
		{
			get
			{
				return this.GetTable<Delegacion>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estados
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<Mail> Mails
		{
			get
			{
				return this.GetTable<Mail>();
			}
		}
		
		public System.Data.Linq.Table<POI> POIs
		{
			get
			{
				return this.GetTable<POI>();
			}
		}
		
		public System.Data.Linq.Table<Route> Routes
		{
			get
			{
				return this.GetTable<Route>();
			}
		}
		
		public System.Data.Linq.Table<RoutePiece> RoutePieces
		{
			get
			{
				return this.GetTable<RoutePiece>();
			}
		}
		
		public System.Data.Linq.Table<SearchHistory> SearchHistories
		{
			get
			{
				return this.GetTable<SearchHistory>();
			}
		}
		
		public System.Data.Linq.Table<SearchIndex> SearchIndexes
		{
			get
			{
				return this.GetTable<SearchIndex>();
			}
		}
		
		public System.Data.Linq.Table<Street> Streets
		{
			get
			{
				return this.GetTable<Street>();
			}
		}
		
		public System.Data.Linq.Table<StreetCrossing> StreetCrossings
		{
			get
			{
				return this.GetTable<StreetCrossing>();
			}
		}
		
		public System.Data.Linq.Table<SystemException> SystemExceptions
		{
			get
			{
				return this.GetTable<SystemException>();
			}
		}
		
		public System.Data.Linq.Table<ServiceAPI> ServiceAPIs
		{
			get
			{
				return this.GetTable<ServiceAPI>();
			}
		}
		
		public System.Data.Linq.Table<ServiceClient> ServiceClients
		{
			get
			{
				return this.GetTable<ServiceClient>();
			}
		}
		
		public System.Data.Linq.Table<ServiceCall> ServiceCalls
		{
			get
			{
				return this.GetTable<ServiceCall>();
			}
		}
		
		public System.Data.Linq.Table<Business> Businesses
		{
			get
			{
				return this.GetTable<Business>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Colonia")]
	public partial class Colonia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _SourceID;
		
		private int _DelegacionID;
		
		private string _SeoName;
		
		private EntitySet<Street> _Streets;
		
		private EntityRef<Delegacion> _Delegacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSourceIDChanging(int value);
    partial void OnSourceIDChanged();
    partial void OnDelegacionIDChanging(int value);
    partial void OnDelegacionIDChanged();
    partial void OnSeoNameChanging(string value);
    partial void OnSeoNameChanged();
    #endregion
		
		public Colonia()
		{
			this._Streets = new EntitySet<Street>(new Action<Street>(this.attach_Streets), new Action<Street>(this.detach_Streets));
			this._Delegacion = default(EntityRef<Delegacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int NOT NULL")]
		public int SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegacionID", DbType="Int NOT NULL")]
		public int DelegacionID
		{
			get
			{
				return this._DelegacionID;
			}
			set
			{
				if ((this._DelegacionID != value))
				{
					if (this._Delegacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDelegacionIDChanging(value);
					this.SendPropertyChanging();
					this._DelegacionID = value;
					this.SendPropertyChanged("DelegacionID");
					this.OnDelegacionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string SeoName
		{
			get
			{
				return this._SeoName;
			}
			set
			{
				if ((this._SeoName != value))
				{
					this.OnSeoNameChanging(value);
					this.SendPropertyChanging();
					this._SeoName = value;
					this.SendPropertyChanged("SeoName");
					this.OnSeoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Colonia_Street", Storage="_Streets", ThisKey="ID", OtherKey="ColoniaID")]
		public EntitySet<Street> Streets
		{
			get
			{
				return this._Streets;
			}
			set
			{
				this._Streets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Delegacion_Colonia", Storage="_Delegacion", ThisKey="DelegacionID", OtherKey="ID", IsForeignKey=true)]
		public Delegacion Delegacion
		{
			get
			{
				return this._Delegacion.Entity;
			}
			set
			{
				Delegacion previousValue = this._Delegacion.Entity;
				if (((previousValue != value) 
							|| (this._Delegacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Delegacion.Entity = null;
						previousValue.Colonias.Remove(this);
					}
					this._Delegacion.Entity = value;
					if ((value != null))
					{
						value.Colonias.Add(this);
						this._DelegacionID = value.ID;
					}
					else
					{
						this._DelegacionID = default(int);
					}
					this.SendPropertyChanged("Delegacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Streets(Street entity)
		{
			this.SendPropertyChanging();
			entity.Colonia = this;
		}
		
		private void detach_Streets(Street entity)
		{
			this.SendPropertyChanging();
			entity.Colonia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Type")]
	public partial class Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private double _AverageSpeed;
		
		private bool _HasNamedStationList;
		
		private bool _ShowInWeb;
		
		private int _PriceTypeID;
		
		private string _PriceDefinition;
		
		private double _Frequency;
		
		private bool _IsWalkingType;
		
		private string _SeoName;
		
		private EntitySet<Route> _Routes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAverageSpeedChanging(double value);
    partial void OnAverageSpeedChanged();
    partial void OnHasNamedStationListChanging(bool value);
    partial void OnHasNamedStationListChanged();
    partial void OnShowInWebChanging(bool value);
    partial void OnShowInWebChanged();
    partial void OnPriceTypeIDChanging(int value);
    partial void OnPriceTypeIDChanged();
    partial void OnPriceDefinitionChanging(string value);
    partial void OnPriceDefinitionChanged();
    partial void OnFrequencyChanging(double value);
    partial void OnFrequencyChanged();
    partial void OnIsWalkingTypeChanging(bool value);
    partial void OnIsWalkingTypeChanged();
    partial void OnSeoNameChanging(string value);
    partial void OnSeoNameChanged();
    #endregion
		
		public Type()
		{
			this._Routes = new EntitySet<Route>(new Action<Route>(this.attach_Routes), new Action<Route>(this.detach_Routes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageSpeed", DbType="Float NOT NULL")]
		public double AverageSpeed
		{
			get
			{
				return this._AverageSpeed;
			}
			set
			{
				if ((this._AverageSpeed != value))
				{
					this.OnAverageSpeedChanging(value);
					this.SendPropertyChanging();
					this._AverageSpeed = value;
					this.SendPropertyChanged("AverageSpeed");
					this.OnAverageSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasNamedStationList", DbType="Bit NOT NULL")]
		public bool HasNamedStationList
		{
			get
			{
				return this._HasNamedStationList;
			}
			set
			{
				if ((this._HasNamedStationList != value))
				{
					this.OnHasNamedStationListChanging(value);
					this.SendPropertyChanging();
					this._HasNamedStationList = value;
					this.SendPropertyChanged("HasNamedStationList");
					this.OnHasNamedStationListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInWeb", DbType="Bit NOT NULL")]
		public bool ShowInWeb
		{
			get
			{
				return this._ShowInWeb;
			}
			set
			{
				if ((this._ShowInWeb != value))
				{
					this.OnShowInWebChanging(value);
					this.SendPropertyChanging();
					this._ShowInWeb = value;
					this.SendPropertyChanged("ShowInWeb");
					this.OnShowInWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTypeID", DbType="Int NOT NULL")]
		public int PriceTypeID
		{
			get
			{
				return this._PriceTypeID;
			}
			set
			{
				if ((this._PriceTypeID != value))
				{
					this.OnPriceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PriceTypeID = value;
					this.SendPropertyChanged("PriceTypeID");
					this.OnPriceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDefinition", DbType="VarChar(50)")]
		public string PriceDefinition
		{
			get
			{
				return this._PriceDefinition;
			}
			set
			{
				if ((this._PriceDefinition != value))
				{
					this.OnPriceDefinitionChanging(value);
					this.SendPropertyChanging();
					this._PriceDefinition = value;
					this.SendPropertyChanged("PriceDefinition");
					this.OnPriceDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Float NOT NULL")]
		public double Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWalkingType", DbType="Bit NOT NULL")]
		public bool IsWalkingType
		{
			get
			{
				return this._IsWalkingType;
			}
			set
			{
				if ((this._IsWalkingType != value))
				{
					this.OnIsWalkingTypeChanging(value);
					this.SendPropertyChanging();
					this._IsWalkingType = value;
					this.SendPropertyChanged("IsWalkingType");
					this.OnIsWalkingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SeoName
		{
			get
			{
				return this._SeoName;
			}
			set
			{
				if ((this._SeoName != value))
				{
					this.OnSeoNameChanging(value);
					this.SendPropertyChanging();
					this._SeoName = value;
					this.SendPropertyChanged("SeoName");
					this.OnSeoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Route", Storage="_Routes", ThisKey="ID", OtherKey="TypeID")]
		public EntitySet<Route> Routes
		{
			get
			{
				return this._Routes;
			}
			set
			{
				this._Routes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Routes(Route entity)
		{
			this.SendPropertyChanging();
			entity.Type = this;
		}
		
		private void detach_Routes(Route entity)
		{
			this.SendPropertyChanging();
			entity.Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Delegacion")]
	public partial class Delegacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _SourceID;
		
		private int _EstadoID;
		
		private string _SeoName;
		
		private EntitySet<Colonia> _Colonias;
		
		private EntityRef<Estado> _Estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSourceIDChanging(int value);
    partial void OnSourceIDChanged();
    partial void OnEstadoIDChanging(int value);
    partial void OnEstadoIDChanged();
    partial void OnSeoNameChanging(string value);
    partial void OnSeoNameChanged();
    #endregion
		
		public Delegacion()
		{
			this._Colonias = new EntitySet<Colonia>(new Action<Colonia>(this.attach_Colonias), new Action<Colonia>(this.detach_Colonias));
			this._Estado = default(EntityRef<Estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int NOT NULL")]
		public int SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoID", DbType="Int NOT NULL")]
		public int EstadoID
		{
			get
			{
				return this._EstadoID;
			}
			set
			{
				if ((this._EstadoID != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoIDChanging(value);
					this.SendPropertyChanging();
					this._EstadoID = value;
					this.SendPropertyChanged("EstadoID");
					this.OnEstadoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string SeoName
		{
			get
			{
				return this._SeoName;
			}
			set
			{
				if ((this._SeoName != value))
				{
					this.OnSeoNameChanging(value);
					this.SendPropertyChanging();
					this._SeoName = value;
					this.SendPropertyChanged("SeoName");
					this.OnSeoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Delegacion_Colonia", Storage="_Colonias", ThisKey="ID", OtherKey="DelegacionID")]
		public EntitySet<Colonia> Colonias
		{
			get
			{
				return this._Colonias;
			}
			set
			{
				this._Colonias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Delegacion", Storage="_Estado", ThisKey="EstadoID", OtherKey="ID", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Delegacions.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Delegacions.Add(this);
						this._EstadoID = value.ID;
					}
					else
					{
						this._EstadoID = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Colonias(Colonia entity)
		{
			this.SendPropertyChanging();
			entity.Delegacion = this;
		}
		
		private void detach_Colonias(Colonia entity)
		{
			this.SendPropertyChanging();
			entity.Delegacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _SourceID;
		
		private string _SeoName;
		
		private EntitySet<Delegacion> _Delegacions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSourceIDChanging(int value);
    partial void OnSourceIDChanged();
    partial void OnSeoNameChanging(string value);
    partial void OnSeoNameChanged();
    #endregion
		
		public Estado()
		{
			this._Delegacions = new EntitySet<Delegacion>(new Action<Delegacion>(this.attach_Delegacions), new Action<Delegacion>(this.detach_Delegacions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int NOT NULL")]
		public int SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string SeoName
		{
			get
			{
				return this._SeoName;
			}
			set
			{
				if ((this._SeoName != value))
				{
					this.OnSeoNameChanging(value);
					this.SendPropertyChanging();
					this._SeoName = value;
					this.SendPropertyChanged("SeoName");
					this.OnSeoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Delegacion", Storage="_Delegacions", ThisKey="ID", OtherKey="EstadoID")]
		public EntitySet<Delegacion> Delegacions
		{
			get
			{
				return this._Delegacions;
			}
			set
			{
				this._Delegacions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Delegacions(Delegacion entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Delegacions(Delegacion entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mail")]
	public partial class Mail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Subject;
		
		private string _Name;
		
		private string _Email;
		
		private string _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public Mail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(255)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POI")]
	public partial class POI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private double _Lat;
		
		private double _Lng;
		
		private System.Nullable<int> _StreetCrossingID;
		
		private EntityRef<StreetCrossing> _StreetCrossing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLatChanging(double value);
    partial void OnLatChanged();
    partial void OnLngChanging(double value);
    partial void OnLngChanged();
    partial void OnStreetCrossingIDChanging(System.Nullable<int> value);
    partial void OnStreetCrossingIDChanged();
    #endregion
		
		public POI()
		{
			this._StreetCrossing = default(EntityRef<StreetCrossing>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="Float NOT NULL")]
		public double Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lng", DbType="Float NOT NULL")]
		public double Lng
		{
			get
			{
				return this._Lng;
			}
			set
			{
				if ((this._Lng != value))
				{
					this.OnLngChanging(value);
					this.SendPropertyChanging();
					this._Lng = value;
					this.SendPropertyChanged("Lng");
					this.OnLngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetCrossingID", DbType="Int")]
		public System.Nullable<int> StreetCrossingID
		{
			get
			{
				return this._StreetCrossingID;
			}
			set
			{
				if ((this._StreetCrossingID != value))
				{
					if (this._StreetCrossing.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStreetCrossingIDChanging(value);
					this.SendPropertyChanging();
					this._StreetCrossingID = value;
					this.SendPropertyChanged("StreetCrossingID");
					this.OnStreetCrossingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StreetCrossing_POI", Storage="_StreetCrossing", ThisKey="StreetCrossingID", OtherKey="ID", IsForeignKey=true)]
		public StreetCrossing StreetCrossing
		{
			get
			{
				return this._StreetCrossing.Entity;
			}
			set
			{
				StreetCrossing previousValue = this._StreetCrossing.Entity;
				if (((previousValue != value) 
							|| (this._StreetCrossing.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StreetCrossing.Entity = null;
						previousValue.POIs.Remove(this);
					}
					this._StreetCrossing.Entity = value;
					if ((value != null))
					{
						value.POIs.Add(this);
						this._StreetCrossingID = value.ID;
					}
					else
					{
						this._StreetCrossingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StreetCrossing");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Route")]
	public partial class Route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _Status;
		
		private System.Nullable<int> _SplitRoutePieceID;
		
		private string _FromName;
		
		private string _ToName;
		
		private int _TypeID;
		
		private string _Description;
		
		private string _Email;
		
		private System.Nullable<double> _AverageSpeed;
		
		private System.Nullable<int> _PriceTypeID;
		
		private string _PriceDefinition;
		
		private System.Nullable<double> _Frequency;
		
		private string _SeoName;
		
		private System.Nullable<int> _ParentRouteID;
		
		private string _OldSeoName;
		
		private EntitySet<RoutePiece> _RoutePieces;
		
		private EntityRef<Type> _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnSplitRoutePieceIDChanging(System.Nullable<int> value);
    partial void OnSplitRoutePieceIDChanged();
    partial void OnFromNameChanging(string value);
    partial void OnFromNameChanged();
    partial void OnToNameChanging(string value);
    partial void OnToNameChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAverageSpeedChanging(System.Nullable<double> value);
    partial void OnAverageSpeedChanged();
    partial void OnPriceTypeIDChanging(System.Nullable<int> value);
    partial void OnPriceTypeIDChanged();
    partial void OnPriceDefinitionChanging(string value);
    partial void OnPriceDefinitionChanged();
    partial void OnFrequencyChanging(System.Nullable<double> value);
    partial void OnFrequencyChanged();
    partial void OnSeoNameChanging(string value);
    partial void OnSeoNameChanged();
    partial void OnParentRouteIDChanging(System.Nullable<int> value);
    partial void OnParentRouteIDChanged();
    partial void OnOldSeoNameChanging(string value);
    partial void OnOldSeoNameChanged();
    #endregion
		
		public Route()
		{
			this._RoutePieces = new EntitySet<RoutePiece>(new Action<RoutePiece>(this.attach_RoutePieces), new Action<RoutePiece>(this.detach_RoutePieces));
			this._Type = default(EntityRef<Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplitRoutePieceID", DbType="Int")]
		public System.Nullable<int> SplitRoutePieceID
		{
			get
			{
				return this._SplitRoutePieceID;
			}
			set
			{
				if ((this._SplitRoutePieceID != value))
				{
					this.OnSplitRoutePieceIDChanging(value);
					this.SendPropertyChanging();
					this._SplitRoutePieceID = value;
					this.SendPropertyChanged("SplitRoutePieceID");
					this.OnSplitRoutePieceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromName", DbType="VarChar(255)")]
		public string FromName
		{
			get
			{
				return this._FromName;
			}
			set
			{
				if ((this._FromName != value))
				{
					this.OnFromNameChanging(value);
					this.SendPropertyChanging();
					this._FromName = value;
					this.SendPropertyChanged("FromName");
					this.OnFromNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToName", DbType="VarChar(255)")]
		public string ToName
		{
			get
			{
				return this._ToName;
			}
			set
			{
				if ((this._ToName != value))
				{
					this.OnToNameChanging(value);
					this.SendPropertyChanging();
					this._ToName = value;
					this.SendPropertyChanged("ToName");
					this.OnToNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageSpeed", DbType="Float")]
		public System.Nullable<double> AverageSpeed
		{
			get
			{
				return this._AverageSpeed;
			}
			set
			{
				if ((this._AverageSpeed != value))
				{
					this.OnAverageSpeedChanging(value);
					this.SendPropertyChanging();
					this._AverageSpeed = value;
					this.SendPropertyChanged("AverageSpeed");
					this.OnAverageSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTypeID", DbType="Int")]
		public System.Nullable<int> PriceTypeID
		{
			get
			{
				return this._PriceTypeID;
			}
			set
			{
				if ((this._PriceTypeID != value))
				{
					this.OnPriceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PriceTypeID = value;
					this.SendPropertyChanged("PriceTypeID");
					this.OnPriceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDefinition", DbType="VarChar(50)")]
		public string PriceDefinition
		{
			get
			{
				return this._PriceDefinition;
			}
			set
			{
				if ((this._PriceDefinition != value))
				{
					this.OnPriceDefinitionChanging(value);
					this.SendPropertyChanging();
					this._PriceDefinition = value;
					this.SendPropertyChanged("PriceDefinition");
					this.OnPriceDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="Float")]
		public System.Nullable<double> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string SeoName
		{
			get
			{
				return this._SeoName;
			}
			set
			{
				if ((this._SeoName != value))
				{
					this.OnSeoNameChanging(value);
					this.SendPropertyChanging();
					this._SeoName = value;
					this.SendPropertyChanged("SeoName");
					this.OnSeoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentRouteID", DbType="Int")]
		public System.Nullable<int> ParentRouteID
		{
			get
			{
				return this._ParentRouteID;
			}
			set
			{
				if ((this._ParentRouteID != value))
				{
					this.OnParentRouteIDChanging(value);
					this.SendPropertyChanging();
					this._ParentRouteID = value;
					this.SendPropertyChanged("ParentRouteID");
					this.OnParentRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSeoName", DbType="VarChar(255)")]
		public string OldSeoName
		{
			get
			{
				return this._OldSeoName;
			}
			set
			{
				if ((this._OldSeoName != value))
				{
					this.OnOldSeoNameChanging(value);
					this.SendPropertyChanging();
					this._OldSeoName = value;
					this.SendPropertyChanged("OldSeoName");
					this.OnOldSeoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Route_RoutePiece", Storage="_RoutePieces", ThisKey="ID", OtherKey="RouteID")]
		public EntitySet<RoutePiece> RoutePieces
		{
			get
			{
				return this._RoutePieces;
			}
			set
			{
				this._RoutePieces.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Route", Storage="_Type", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true)]
		public Type Type
		{
			get
			{
				return this._Type.Entity;
			}
			set
			{
				Type previousValue = this._Type.Entity;
				if (((previousValue != value) 
							|| (this._Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Type.Entity = null;
						previousValue.Routes.Remove(this);
					}
					this._Type.Entity = value;
					if ((value != null))
					{
						value.Routes.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoutePieces(RoutePiece entity)
		{
			this.SendPropertyChanging();
			entity.Route = this;
		}
		
		private void detach_RoutePieces(RoutePiece entity)
		{
			this.SendPropertyChanging();
			entity.Route = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoutePiece")]
	public partial class RoutePiece : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private double _Lat;
		
		private double _Lng;
		
		private int _RouteID;
		
		private System.Nullable<int> _StreetCrossingID;
		
		private string _SeoName;
		
		private EntityRef<Route> _Route;
		
		private EntityRef<StreetCrossing> _StreetCrossing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLatChanging(double value);
    partial void OnLatChanged();
    partial void OnLngChanging(double value);
    partial void OnLngChanged();
    partial void OnRouteIDChanging(int value);
    partial void OnRouteIDChanged();
    partial void OnStreetCrossingIDChanging(System.Nullable<int> value);
    partial void OnStreetCrossingIDChanged();
    partial void OnSeoNameChanging(string value);
    partial void OnSeoNameChanged();
    #endregion
		
		public RoutePiece()
		{
			this._Route = default(EntityRef<Route>);
			this._StreetCrossing = default(EntityRef<StreetCrossing>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="Float NOT NULL")]
		public double Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lng", DbType="Float NOT NULL")]
		public double Lng
		{
			get
			{
				return this._Lng;
			}
			set
			{
				if ((this._Lng != value))
				{
					this.OnLngChanging(value);
					this.SendPropertyChanging();
					this._Lng = value;
					this.SendPropertyChanged("Lng");
					this.OnLngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", DbType="Int NOT NULL")]
		public int RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					if (this._Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetCrossingID", DbType="Int")]
		public System.Nullable<int> StreetCrossingID
		{
			get
			{
				return this._StreetCrossingID;
			}
			set
			{
				if ((this._StreetCrossingID != value))
				{
					if (this._StreetCrossing.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStreetCrossingIDChanging(value);
					this.SendPropertyChanging();
					this._StreetCrossingID = value;
					this.SendPropertyChanged("StreetCrossingID");
					this.OnStreetCrossingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoName", DbType="VarChar(255)")]
		public string SeoName
		{
			get
			{
				return this._SeoName;
			}
			set
			{
				if ((this._SeoName != value))
				{
					this.OnSeoNameChanging(value);
					this.SendPropertyChanging();
					this._SeoName = value;
					this.SendPropertyChanged("SeoName");
					this.OnSeoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Route_RoutePiece", Storage="_Route", ThisKey="RouteID", OtherKey="ID", IsForeignKey=true)]
		public Route Route
		{
			get
			{
				return this._Route.Entity;
			}
			set
			{
				Route previousValue = this._Route.Entity;
				if (((previousValue != value) 
							|| (this._Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Route.Entity = null;
						previousValue.RoutePieces.Remove(this);
					}
					this._Route.Entity = value;
					if ((value != null))
					{
						value.RoutePieces.Add(this);
						this._RouteID = value.ID;
					}
					else
					{
						this._RouteID = default(int);
					}
					this.SendPropertyChanged("Route");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StreetCrossing_RoutePiece", Storage="_StreetCrossing", ThisKey="StreetCrossingID", OtherKey="ID", IsForeignKey=true)]
		public StreetCrossing StreetCrossing
		{
			get
			{
				return this._StreetCrossing.Entity;
			}
			set
			{
				StreetCrossing previousValue = this._StreetCrossing.Entity;
				if (((previousValue != value) 
							|| (this._StreetCrossing.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StreetCrossing.Entity = null;
						previousValue.RoutePieces.Remove(this);
					}
					this._StreetCrossing.Entity = value;
					if ((value != null))
					{
						value.RoutePieces.Add(this);
						this._StreetCrossingID = value.ID;
					}
					else
					{
						this._StreetCrossingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StreetCrossing");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchHistory")]
	public partial class SearchHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _IpAdress;
		
		private string _FromName;
		
		private double _FromLat;
		
		private double _FromLng;
		
		private string _ToName;
		
		private double _ToLat;
		
		private double _ToLng;
		
		private System.DateTime _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIpAdressChanging(string value);
    partial void OnIpAdressChanged();
    partial void OnFromNameChanging(string value);
    partial void OnFromNameChanged();
    partial void OnFromLatChanging(double value);
    partial void OnFromLatChanged();
    partial void OnFromLngChanging(double value);
    partial void OnFromLngChanged();
    partial void OnToNameChanging(string value);
    partial void OnToNameChanged();
    partial void OnToLatChanging(double value);
    partial void OnToLatChanged();
    partial void OnToLngChanging(double value);
    partial void OnToLngChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public SearchHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAdress", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IpAdress
		{
			get
			{
				return this._IpAdress;
			}
			set
			{
				if ((this._IpAdress != value))
				{
					this.OnIpAdressChanging(value);
					this.SendPropertyChanging();
					this._IpAdress = value;
					this.SendPropertyChanged("IpAdress");
					this.OnIpAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromName", DbType="VarChar(255)")]
		public string FromName
		{
			get
			{
				return this._FromName;
			}
			set
			{
				if ((this._FromName != value))
				{
					this.OnFromNameChanging(value);
					this.SendPropertyChanging();
					this._FromName = value;
					this.SendPropertyChanged("FromName");
					this.OnFromNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromLat", DbType="Float NOT NULL")]
		public double FromLat
		{
			get
			{
				return this._FromLat;
			}
			set
			{
				if ((this._FromLat != value))
				{
					this.OnFromLatChanging(value);
					this.SendPropertyChanging();
					this._FromLat = value;
					this.SendPropertyChanged("FromLat");
					this.OnFromLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromLng", DbType="Float NOT NULL")]
		public double FromLng
		{
			get
			{
				return this._FromLng;
			}
			set
			{
				if ((this._FromLng != value))
				{
					this.OnFromLngChanging(value);
					this.SendPropertyChanging();
					this._FromLng = value;
					this.SendPropertyChanged("FromLng");
					this.OnFromLngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToName", DbType="VarChar(255)")]
		public string ToName
		{
			get
			{
				return this._ToName;
			}
			set
			{
				if ((this._ToName != value))
				{
					this.OnToNameChanging(value);
					this.SendPropertyChanging();
					this._ToName = value;
					this.SendPropertyChanged("ToName");
					this.OnToNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToLat", DbType="Float NOT NULL")]
		public double ToLat
		{
			get
			{
				return this._ToLat;
			}
			set
			{
				if ((this._ToLat != value))
				{
					this.OnToLatChanging(value);
					this.SendPropertyChanging();
					this._ToLat = value;
					this.SendPropertyChanged("ToLat");
					this.OnToLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToLng", DbType="Float NOT NULL")]
		public double ToLng
		{
			get
			{
				return this._ToLng;
			}
			set
			{
				if ((this._ToLng != value))
				{
					this.OnToLngChanging(value);
					this.SendPropertyChanging();
					this._ToLng = value;
					this.SendPropertyChanged("ToLng");
					this.OnToLngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchIndex")]
	public partial class SearchIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RoutePieceID;
		
		private int _RoutePiece2ID;
		
		private double _Cost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoutePieceIDChanging(int value);
    partial void OnRoutePieceIDChanged();
    partial void OnRoutePiece2IDChanging(int value);
    partial void OnRoutePiece2IDChanged();
    partial void OnCostChanging(double value);
    partial void OnCostChanged();
    #endregion
		
		public SearchIndex()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutePieceID", DbType="Int NOT NULL")]
		public int RoutePieceID
		{
			get
			{
				return this._RoutePieceID;
			}
			set
			{
				if ((this._RoutePieceID != value))
				{
					this.OnRoutePieceIDChanging(value);
					this.SendPropertyChanging();
					this._RoutePieceID = value;
					this.SendPropertyChanged("RoutePieceID");
					this.OnRoutePieceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutePiece2ID", DbType="Int NOT NULL")]
		public int RoutePiece2ID
		{
			get
			{
				return this._RoutePiece2ID;
			}
			set
			{
				if ((this._RoutePiece2ID != value))
				{
					this.OnRoutePiece2IDChanging(value);
					this.SendPropertyChanging();
					this._RoutePiece2ID = value;
					this.SendPropertyChanged("RoutePiece2ID");
					this.OnRoutePiece2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float NOT NULL")]
		public double Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Street")]
	public partial class Street : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _SourceID;
		
		private int _ColoniaID;
		
		private string _FullName;
		
		private EntitySet<StreetCrossing> _StreetCrossings;
		
		private EntitySet<StreetCrossing> _StreetCrossings1;
		
		private EntityRef<Colonia> _Colonia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSourceIDChanging(int value);
    partial void OnSourceIDChanged();
    partial void OnColoniaIDChanging(int value);
    partial void OnColoniaIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    #endregion
		
		public Street()
		{
			this._StreetCrossings = new EntitySet<StreetCrossing>(new Action<StreetCrossing>(this.attach_StreetCrossings), new Action<StreetCrossing>(this.detach_StreetCrossings));
			this._StreetCrossings1 = new EntitySet<StreetCrossing>(new Action<StreetCrossing>(this.attach_StreetCrossings1), new Action<StreetCrossing>(this.detach_StreetCrossings1));
			this._Colonia = default(EntityRef<Colonia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int NOT NULL")]
		public int SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColoniaID", DbType="Int NOT NULL")]
		public int ColoniaID
		{
			get
			{
				return this._ColoniaID;
			}
			set
			{
				if ((this._ColoniaID != value))
				{
					if (this._Colonia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColoniaIDChanging(value);
					this.SendPropertyChanging();
					this._ColoniaID = value;
					this.SendPropertyChanged("ColoniaID");
					this.OnColoniaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Street_StreetCrossing", Storage="_StreetCrossings", ThisKey="ID", OtherKey="StreetID")]
		public EntitySet<StreetCrossing> StreetCrossings
		{
			get
			{
				return this._StreetCrossings;
			}
			set
			{
				this._StreetCrossings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Street_StreetCrossing1", Storage="_StreetCrossings1", ThisKey="ID", OtherKey="Street2ID")]
		public EntitySet<StreetCrossing> StreetCrossings1
		{
			get
			{
				return this._StreetCrossings1;
			}
			set
			{
				this._StreetCrossings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Colonia_Street", Storage="_Colonia", ThisKey="ColoniaID", OtherKey="ID", IsForeignKey=true)]
		public Colonia Colonia
		{
			get
			{
				return this._Colonia.Entity;
			}
			set
			{
				Colonia previousValue = this._Colonia.Entity;
				if (((previousValue != value) 
							|| (this._Colonia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Colonia.Entity = null;
						previousValue.Streets.Remove(this);
					}
					this._Colonia.Entity = value;
					if ((value != null))
					{
						value.Streets.Add(this);
						this._ColoniaID = value.ID;
					}
					else
					{
						this._ColoniaID = default(int);
					}
					this.SendPropertyChanged("Colonia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StreetCrossings(StreetCrossing entity)
		{
			this.SendPropertyChanging();
			entity.Street = this;
		}
		
		private void detach_StreetCrossings(StreetCrossing entity)
		{
			this.SendPropertyChanging();
			entity.Street = null;
		}
		
		private void attach_StreetCrossings1(StreetCrossing entity)
		{
			this.SendPropertyChanging();
			entity.Street1 = this;
		}
		
		private void detach_StreetCrossings1(StreetCrossing entity)
		{
			this.SendPropertyChanging();
			entity.Street1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StreetCrossing")]
	public partial class StreetCrossing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _SourceID;
		
		private int _StreetID;
		
		private int _Street2ID;
		
		private double _Lat;
		
		private double _Lng;
		
		private EntitySet<POI> _POIs;
		
		private EntitySet<RoutePiece> _RoutePieces;
		
		private EntityRef<Street> _Street;
		
		private EntityRef<Street> _Street1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSourceIDChanging(int value);
    partial void OnSourceIDChanged();
    partial void OnStreetIDChanging(int value);
    partial void OnStreetIDChanged();
    partial void OnStreet2IDChanging(int value);
    partial void OnStreet2IDChanged();
    partial void OnLatChanging(double value);
    partial void OnLatChanged();
    partial void OnLngChanging(double value);
    partial void OnLngChanged();
    #endregion
		
		public StreetCrossing()
		{
			this._POIs = new EntitySet<POI>(new Action<POI>(this.attach_POIs), new Action<POI>(this.detach_POIs));
			this._RoutePieces = new EntitySet<RoutePiece>(new Action<RoutePiece>(this.attach_RoutePieces), new Action<RoutePiece>(this.detach_RoutePieces));
			this._Street = default(EntityRef<Street>);
			this._Street1 = default(EntityRef<Street>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int NOT NULL")]
		public int SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetID", DbType="Int NOT NULL")]
		public int StreetID
		{
			get
			{
				return this._StreetID;
			}
			set
			{
				if ((this._StreetID != value))
				{
					if (this._Street.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStreetIDChanging(value);
					this.SendPropertyChanging();
					this._StreetID = value;
					this.SendPropertyChanged("StreetID");
					this.OnStreetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street2ID", DbType="Int NOT NULL")]
		public int Street2ID
		{
			get
			{
				return this._Street2ID;
			}
			set
			{
				if ((this._Street2ID != value))
				{
					if (this._Street1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStreet2IDChanging(value);
					this.SendPropertyChanging();
					this._Street2ID = value;
					this.SendPropertyChanged("Street2ID");
					this.OnStreet2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="Float NOT NULL")]
		public double Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lng", DbType="Float NOT NULL")]
		public double Lng
		{
			get
			{
				return this._Lng;
			}
			set
			{
				if ((this._Lng != value))
				{
					this.OnLngChanging(value);
					this.SendPropertyChanging();
					this._Lng = value;
					this.SendPropertyChanged("Lng");
					this.OnLngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StreetCrossing_POI", Storage="_POIs", ThisKey="ID", OtherKey="StreetCrossingID")]
		public EntitySet<POI> POIs
		{
			get
			{
				return this._POIs;
			}
			set
			{
				this._POIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StreetCrossing_RoutePiece", Storage="_RoutePieces", ThisKey="ID", OtherKey="StreetCrossingID")]
		public EntitySet<RoutePiece> RoutePieces
		{
			get
			{
				return this._RoutePieces;
			}
			set
			{
				this._RoutePieces.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Street_StreetCrossing", Storage="_Street", ThisKey="StreetID", OtherKey="ID", IsForeignKey=true)]
		public Street Street
		{
			get
			{
				return this._Street.Entity;
			}
			set
			{
				Street previousValue = this._Street.Entity;
				if (((previousValue != value) 
							|| (this._Street.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Street.Entity = null;
						previousValue.StreetCrossings.Remove(this);
					}
					this._Street.Entity = value;
					if ((value != null))
					{
						value.StreetCrossings.Add(this);
						this._StreetID = value.ID;
					}
					else
					{
						this._StreetID = default(int);
					}
					this.SendPropertyChanged("Street");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Street_StreetCrossing1", Storage="_Street1", ThisKey="Street2ID", OtherKey="ID", IsForeignKey=true)]
		public Street Street1
		{
			get
			{
				return this._Street1.Entity;
			}
			set
			{
				Street previousValue = this._Street1.Entity;
				if (((previousValue != value) 
							|| (this._Street1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Street1.Entity = null;
						previousValue.StreetCrossings1.Remove(this);
					}
					this._Street1.Entity = value;
					if ((value != null))
					{
						value.StreetCrossings1.Add(this);
						this._Street2ID = value.ID;
					}
					else
					{
						this._Street2ID = default(int);
					}
					this.SendPropertyChanged("Street1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POIs(POI entity)
		{
			this.SendPropertyChanging();
			entity.StreetCrossing = this;
		}
		
		private void detach_POIs(POI entity)
		{
			this.SendPropertyChanging();
			entity.StreetCrossing = null;
		}
		
		private void attach_RoutePieces(RoutePiece entity)
		{
			this.SendPropertyChanging();
			entity.StreetCrossing = this;
		}
		
		private void detach_RoutePieces(RoutePiece entity)
		{
			this.SendPropertyChanging();
			entity.StreetCrossing = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemException")]
	public partial class SystemException : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _CreateDate;
		
		private string _Name;
		
		private string _StackTrace;
		
		private string _IpAdress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    partial void OnIpAdressChanging(string value);
    partial void OnIpAdressChanged();
    #endregion
		
		public SystemException()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackTrace", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this.OnStackTraceChanging(value);
					this.SendPropertyChanging();
					this._StackTrace = value;
					this.SendPropertyChanged("StackTrace");
					this.OnStackTraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAdress", DbType="VarChar(20)")]
		public string IpAdress
		{
			get
			{
				return this._IpAdress;
			}
			set
			{
				if ((this._IpAdress != value))
				{
					this.OnIpAdressChanging(value);
					this.SendPropertyChanging();
					this._IpAdress = value;
					this.SendPropertyChanged("IpAdress");
					this.OnIpAdressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceAPI")]
	public partial class ServiceAPI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Url;
		
		private int _CreditsPerCall;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnCreditsPerCallChanging(int value);
    partial void OnCreditsPerCallChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ServiceAPI()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditsPerCall", DbType="Int NOT NULL")]
		public int CreditsPerCall
		{
			get
			{
				return this._CreditsPerCall;
			}
			set
			{
				if ((this._CreditsPerCall != value))
				{
					this.OnCreditsPerCallChanging(value);
					this.SendPropertyChanging();
					this._CreditsPerCall = value;
					this.SendPropertyChanged("CreditsPerCall");
					this.OnCreditsPerCallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceClient")]
	public partial class ServiceClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _ApiKey;
		
		private string _Email;
		
		private int _Credits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnApiKeyChanging(string value);
    partial void OnApiKeyChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCreditsChanging(int value);
    partial void OnCreditsChanged();
    #endregion
		
		public ServiceClient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApiKey", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ApiKey
		{
			get
			{
				return this._ApiKey;
			}
			set
			{
				if ((this._ApiKey != value))
				{
					this.OnApiKeyChanging(value);
					this.SendPropertyChanging();
					this._ApiKey = value;
					this.SendPropertyChanged("ApiKey");
					this.OnApiKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credits", DbType="Int NOT NULL")]
		public int Credits
		{
			get
			{
				return this._Credits;
			}
			set
			{
				if ((this._Credits != value))
				{
					this.OnCreditsChanging(value);
					this.SendPropertyChanging();
					this._Credits = value;
					this.SendPropertyChanged("Credits");
					this.OnCreditsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceCall")]
	public partial class ServiceCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ServiceAPIID;
		
		private int _ServiceClientID;
		
		private System.DateTime _CreateDate;
		
		private string _IpAdress;
		
		private string _Parameters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceAPIIDChanging(int value);
    partial void OnServiceAPIIDChanged();
    partial void OnServiceClientIDChanging(int value);
    partial void OnServiceClientIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIpAdressChanging(string value);
    partial void OnIpAdressChanged();
    partial void OnParametersChanging(string value);
    partial void OnParametersChanged();
    #endregion
		
		public ServiceCall()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceAPIID", DbType="Int NOT NULL")]
		public int ServiceAPIID
		{
			get
			{
				return this._ServiceAPIID;
			}
			set
			{
				if ((this._ServiceAPIID != value))
				{
					this.OnServiceAPIIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceAPIID = value;
					this.SendPropertyChanged("ServiceAPIID");
					this.OnServiceAPIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceClientID", DbType="Int NOT NULL")]
		public int ServiceClientID
		{
			get
			{
				return this._ServiceClientID;
			}
			set
			{
				if ((this._ServiceClientID != value))
				{
					this.OnServiceClientIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceClientID = value;
					this.SendPropertyChanged("ServiceClientID");
					this.OnServiceClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAdress", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IpAdress
		{
			get
			{
				return this._IpAdress;
			}
			set
			{
				if ((this._IpAdress != value))
				{
					this.OnIpAdressChanging(value);
					this.SendPropertyChanging();
					this._IpAdress = value;
					this.SendPropertyChanged("IpAdress");
					this.OnIpAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameters", DbType="VarChar(MAX)")]
		public string Parameters
		{
			get
			{
				return this._Parameters;
			}
			set
			{
				if ((this._Parameters != value))
				{
					this.OnParametersChanging(value);
					this.SendPropertyChanging();
					this._Parameters = value;
					this.SendPropertyChanged("Parameters");
					this.OnParametersChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Business")]
	public partial class Business : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _SeoName;
		
		private double _Lat;
		
		private double _Lng;
		
		private string _Tel;
		
		private string _Email;
		
		private string _Web;
		
		private string _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSeoNameChanging(string value);
    partial void OnSeoNameChanged();
    partial void OnLatChanging(double value);
    partial void OnLatChanged();
    partial void OnLngChanging(double value);
    partial void OnLngChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebChanging(string value);
    partial void OnWebChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public Business()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SeoName
		{
			get
			{
				return this._SeoName;
			}
			set
			{
				if ((this._SeoName != value))
				{
					this.OnSeoNameChanging(value);
					this.SendPropertyChanging();
					this._SeoName = value;
					this.SendPropertyChanged("SeoName");
					this.OnSeoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="Float NOT NULL")]
		public double Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lng", DbType="Float NOT NULL")]
		public double Lng
		{
			get
			{
				return this._Lng;
			}
			set
			{
				if ((this._Lng != value))
				{
					this.OnLngChanging(value);
					this.SendPropertyChanging();
					this._Lng = value;
					this.SendPropertyChanged("Lng");
					this.OnLngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Web", DbType="NVarChar(255)")]
		public string Web
		{
			get
			{
				return this._Web;
			}
			set
			{
				if ((this._Web != value))
				{
					this.OnWebChanging(value);
					this.SendPropertyChanging();
					this._Web = value;
					this.SendPropertyChanged("Web");
					this.OnWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
