@model viadf.Models.MapModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h1>Mapa interactivo del transporte público en la CDMX</h1>
<div class="row">
    <div class="col s12 m12 l2">
        @foreach (var type in Model.AllTypes)
            {
            <div>
                <input type="checkbox" id="selected_@type.ID" value="@type.ID" checked onchange="changeType(@type.ID)" style="position:relative;visibility:visible;left:auto;" />
                <b>@type.Name</b>
                <div id="lines_@type.ID" class="lines">

                </div>
            </div>
        }
    </div>
    <div class="col s12 m12 l10">
        <p style="display:none;color:red;" id="toFarError">¡Acercate más en el mapa para ver las lineas del transporte!</p>
        <div id="map" style="height:600px;"></div>
    </div>
</div>


@section JavaScript {

    <script type="text/javascript">

        var colors = ["#000", "#F00", "#0F0", "#00F", "#FF0", "#0FF", "#F0F", "BBB", "666", "666"];

        var timeout = null;
        var map = null;

        var lines = [];
        var lineTypes = [];

        $(function () {

            var myOptions = {
                center: new google.maps.LatLng(19.43255865356213, -99.13337157141115),
                zoom: 17,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                streetViewControl: false,
                mapTypeControl: false,
            };

            map = new google.maps.Map(document.getElementById("map"), myOptions);

            map.addListener('bounds_changed', function () {
                if (timeout) window.clearInterval(timeout);

                var bounds = map.getBounds();
                var min = bounds.getSouthWest().lat() + "," + bounds.getSouthWest().lng();
                var max = bounds.getNorthEast().lat() + "," + bounds.getNorthEast().lng();

                timeout = window.setTimeout(function () {
                    if (map.getZoom() >= 16) {
                        $.get("/service/getrouteswithpiecesinarea?minLatLng=" + min + "&maxLatLng=" + max, function (data) {
                            setData(data);
                        });
                    } else {
                        setEmptyData();
                    }
                    timeout = null;
                }, 500);
            });
        });

        function changeType(typeid) {
            var visible = $("#selected_" + typeid).prop('checked');

            $.each(lines, function (i, line) {
                if (typeid == lineTypes[i]) {
                    line.setMap(visible ? map : null);
                }
            });
        }

        function clearData() {
            $(".lines").empty();

            $.each(lines, function (i, line) {
                line.setMap(null);
            });

            lines = [];
            lineTypes = [];
        }

        function setEmptyData() {
            clearData();
            $("#toFarError").show();
        }

        function setData(data) {

            clearData();
            $("#toFarError").hide();

            $.each(data, function (i, d) {
                var routeCoords = [];
                $.each(d.Path, function (i, p) {
                    routeCoords.push(new google.maps.LatLng(p.Lat, p.Lng));
                });

                var path = new google.maps.Polyline({
                    path: routeCoords,
                    strokeColor: colors[d.TypeID - 1],
                    strokeOpacity: 0.6,
                    strokeWeight: 5
                });

                google.maps.event.addListener(path, 'click', function() {
                    alert(d.Name + "("+ d.FromName+" - " + d.ToName+")");                   
                });

                if ($("#selected_" + d.TypeID).prop('checked')) {
                    path.setMap(map);
                }

                lines.push(path);
                lineTypes.push(d.TypeID);

                $("#lines_" + d.TypeID).append("<div>" + d.Name + "</div>");
            });
        }
    </script>
}
